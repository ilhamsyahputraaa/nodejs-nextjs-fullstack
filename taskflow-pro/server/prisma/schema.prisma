datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String   @id @default(cuid())
  name          String?
  email         String   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  role     String @default("MEMBER")
  accounts      Account[]
  sessions      Session[]
  organizations OrganizationMember[]
  tasks         Task[]   @relation("AssignedTasks")
}

model Organization {
  id      String                @id @default(cuid())
  name    String
  members OrganizationMember[]
  projects Project[]
}

model OrganizationMember {
  id             String   @id @default(cuid())
  user           User     @relation(fields: [userId], references: [id])
  userId         String
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  role           String // "ADMIN" | "MEMBER"
}

model Project {
  id             String   @id @default(cuid())
  name           String
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  tasks          Task[]
}

model Task {
  id          String   @id @default(cuid())
  title       String
  description String?
  status      String // TODO, IN_PROGRESS, DONE
  dueDate     DateTime?
  assignedTo  User?    @relation("AssignedTasks", fields: [assignedToId], references: [id])
  assignedToId String?
  project     Project  @relation(fields: [projectId], references: [id])
  projectId   String
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? 
  access_token       String? 
  expires_at         Int?    
  token_type         String? 
  scope              String? 
  id_token           String? 
  session_state      String? 
  user               User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
